name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - release
      - develop
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
      - 'fix/**'
  pull_request:
    branches:
      - main
      - release
      - develop
permissions:
  checks: write
  contents: write


jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Prepare
        run: echo "Prepare step"


  lint:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.0'
      - name: Install dependencies
        run: npm install
        working-directory: ./my-project
      - name: Run ESLint
        run: npx eslint . --format json --output-file eslint-report.json
        working-directory: ./my-project
      - name: Upload ESLint Report
        uses: actions/upload-artifact@v3
        with:
          name: eslint-report
          path: ./my-project/eslint-report.json

  tests:
  runs-on: ubuntu-latest
  needs: lint
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.18.0'
    - name: Install dependencies
      run: npm install
      working-directory: ./my-project
    - name: Run tests
      run: npm run test
      working-directory: ./my-project


  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build
        run: echo "Build step"


   
  update-version:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Update Version
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          chmod +x update-version.sh
          chmod +x Project.json
          BRANCH=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
          ./update-version.sh "$BRANCH" "Project.json"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add Project.json
          git commit -m "Update version"
          git push

  deploy:
    runs-on: ubuntu-latest
    needs: update-version
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy
        run: echo "Deploy step"

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Notify
        run: echo "Notify step"
